@startuml
'https://plantuml.com/class-diagram

class Company{
-designation
-getBstShip()
-getImportShip()
-getTopNShips(numberShips, initialDate, finalDate)
}


class ImportShip{
-getFile()
-convertShips()
-getLineArray()
-createShip()
}

class ImportShipController{
-importFile(String fileName)
-importShips()
}

class ImportShipUI{
}

class ShipLocation{
-baseDateTime
-latitude
-longitude
-SOG
-COG
-heading
-position
-transceiverClass
}


class ShipLocationBST{
-insert(shipLocation)
}

class BstShip{
-getShipByMmsiCode(MMSI)
-insert(ship)
-inOrder()
}

class VesselType {
-vesselTypeId
-length
-width
-capacity
}

class Ship {
-mmsiCode : String
-name : String
-imoCode : String
-numberEnergyGenerators : int
-generatorPower : float
-callSign : String
-vesselType : int
-length : float
-width : float
-capacity : float
-draft : float
- shipLocationBST : ShipLocationBST
--
-getMMSI()
-getName()
-getShipId()
-getEnergyGenerators()
-getCallSign()
-getVesselType()
-getLength()
-getWidth()
-getCapacity()
-getDraft()
-setMMSI()
-getShipPosition()
+getShipBTS()
}

class SearchDetailsUI {}

class SearchDetailsController {
-shipExistByMMSI(String mmsiCode)
-shipExistByIMO(String imoCode)
-shipExistByCallSign(String callsign)
-getShipDetails()
}

class SearchDetailsMapper{
-shipDetailsToDto()
}

class ShipDetailsDto{
-mmsiCode : String
-name : String
-imoCode : String
-numberEnergyGenerators : int
-generatorPower : float
-callSign : String
-vesselType : int
-length : float
-width : float
-capacity : float
-draft : float
--
-getMMSI()
-getName()
-getShipId()
-getEnergyGenerators()
-getCallSign()
-getVesselType()
-getLength()
-getWidth()
-getCapacity()
-getDraft()
}

class ShipLocationBST {
-getPositinalMessages(initialDate, finalDate)
}

class ShowPositionalMessagesUI {}

class ShowPositionalMessagesController {
-shipExist(mmsiCode)
-showPositionalMessages(initialDate, finalDate)
}


class MovementsSummaryUI{}

class MovementsSummaryController{
+ getShipByMMSI(mmsiCode : String)
+ createSummaryForShip(ship : Ship)
}

class SummaryMapper{
+ toDto(summary : Summary)
}
class Summary{
- mmsiCode : String
- name : String
- startBaseDate : Date
- endBaseDate : Date
- totalMovementTime : String
- totalMovements : int
- maximumSog : double
- meanSog : double
- maximumCog : double
- meanCog : double
- departureLatitude : int
- departureLongitude : int
- arrivalLatitude : int
- arrivalLongitude : int
- travelledDistance : double
- deltaDistance : double
}
class SummaryDto{
- mmsiCode : String
- name : String
- startBaseDate : Date
- endBaseDate : Date
- totalMovementTime : String
- totalMovements : int
- maximumSog : double
- meanSog : double
- maximumCog : double
- meanCog : double
- departureLatitude : int
- departureLongitude : int
- arrivalLatitude : int
- arrivalLongitude : int
- travelledDistance : double
- deltaDistance : double
}

class ShipLocationBST{
+getStartBase()
+getEndBase()
+getTotalMovements()
+getTotalMovementsTime()
+getMaximumSog()
+getMeanSog()
+getMaximumCog()
+getMeanCog()
+getLatitudeDeparture()
+getLongitudeDeparture()
+getArrivalLatitude()
+getArrivalLongitude()
+getTravelledDistance()
+getDeltaDistance()
}

class ListSomeShipDataUi{}

class ListSomeShipDataController{
+ getShipByList()
+ desiredOrder(order)
--
+ orderTheListAscending()
+ orderTheListDescending()
}


class BstShipLocation{
+ getTotalNumberOfMovements()
+ getTravelledDistance()
+ getDeltaDistance()
}

class BriefSummary{
- mmsiCode : String
- totalNumberOfMovements : int
- deltaDistance : float
- travelledDistance : float
--
}

class ShowTopShipsUI{}

class ShowTopShipsController{
-getTopNShips
}


ImportShipUI ..> ImportShipController

ImportShipController ..> Company

ImportShip "1" -- "1" BstShip : uses >

Company "1" -- "1" BstShip : owns >
Company "1" -- "1..*" VesselType : owns >
Company "1" -- "1" ImportShip : uses >
Company --> Ship : owns
Company --> BstShip : uses

BstShip "1" -- "1..*" Ship : owns >

Ship "1" -- "1" ShipLocationBST : uses >
Ship "1" -- "1" VesselType : has >
Ship --> ShipLocationBST : has
Ship ..> Summary

ShipLocationBST "1" -- "1..*" ShipLocation : has >
ShipLocationBST --> Summary : generate

SearchDetailsUI ..> SearchDetailsController
SearchDetailsUI ..> ShipDetailsDto
SearchDetailsController ..> Company
SearchDetailsController ..> BstShip
SearchDetailsController ..> Ship
SearchDetailsController ..> SearchDetailsMapper
SearchDetailsController ..> ShipDetailsDto
SearchDetailsMapper ..> Ship

ShowPositionalMessagesUI ..> ShowPositionalMessagesController
ShowPositionalMessagesController ..> Company
ShowPositionalMessagesController ..> BstShip
ShowPositionalMessagesController ..> Ship
ShowPositionalMessagesController ..> ShipLocationBST

MovementsSummaryUI ..> MovementsSummaryController
MovementsSummaryController..>Company
MovementsSummaryController ..> SummaryMapper

SummaryMapper ..> SummaryDto

ListSomeShipDataUi ..> ListSomeShipDataController
ListSomeShipDataController ..> Company

BstShipLocation --> BriefSummary : generate

ShowTopShipsUI ..> ShowTopShipsController
ShowTopShipsController ..> Company
ShowTopShipsController "1" -- "1" BstShip : uses >


ShowPairsOfShipsUI .> ShowPairsOfShipsController
ShowPairsOfShipsController ..> Company




class ShowPairsOfShipsUI {}

class ShowPairsOfShipsController {
+ getPairsOfShip()
}

class Company{
+ getBstShip() : BstShip
}

class BstShip {
+ getIntendedPairsOfShips()
+ inOrder() : Iterable<ShipLocation>
}

class Ship {
+ getShipPosition() : ShipLocation
}

class ShipLocation {

}

class ShipLocationBST {
+ getTravelledDistance() : double
+ getArrivalLatitude() : String
+ getArrivalLongitude() : String
+ calculateDistance(arrivalLat : double, arrivalLog : double, arrivalLat2 : double, arrivalLog2 : double)
+ getDepartureLatitude() : String
+ getDepartureLongitude() : String
}










@enduml