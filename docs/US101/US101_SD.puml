@startuml

autonumber
actor "Traffic Manager" as manager

participant ":ImportShipUI" as ui
participant ":ImportShipController" as controller
participant ":ImportShip" as importShip
participant "shipLocation:ShipLocation" as shipLocation
participant "ship:Ship" as ship


activate manager
manager -> ui : import ships from a text file into a BST


activate ui
ui --> manager : requests the name of the .csv file containing the data


deactivate ui


manager -> ui : inserts file name


activate ui


ui -> controller : importFile(fileName)
activate controller


controller -> importShip : getFile(fileName)
activate importShip


deactivate importShip
deactivate controller


ui -> controller : importShips()
activate controller


controller -> importShip : shipsNotConverted = convertShips()
activate importShip


loop for each line on the file


importShip -> importShip ++: shipArray = getLineArray(shipLine)
deactivate importShip


importShip -> importShip ++: shipsNotConverted = createShip(shipArray)


create shipLocation
importShip --> shipLocation: create(messageTime, latitude, longitude, SOG, COG,\n heading, position, transceiverClass)


create ship
importShip --> ship: create(MMSI, name, shipID, energyGenerators, generatorOutput,\n callSign, vesselType, length, width, capacity, draft, shipLocation)


participant ":Company" as company
participant "shipBST:ShipBST" as shipBST


importShip -> company : shipBST = getShipTree()
activate company
deactivate company


importShip -> shipBST : insert(ship)
activate shipBST
deactivate shipBST


deactivate importShip
end
deactivate importShip


ui -> manager : Displays the number of ships which have not been imported
deactivate controller

@enduml

